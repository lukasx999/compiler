== THIS FILE IS GENERATED BY `getgrammar.py` ==

program             -> statement* EOF
statement           -> vardecl | if | function | return | echo | block | expressionstatement
function            -> "defun" IDENTIFIER "(" paramlist ")" "->" DATATYPE (body | ";")
return              -> "ret" expression? ";"
echo                -> "echo" expression ";"
if                  -> "if" expression block ("else" block)?
expressionstatement -> expression ";"
vardeclaration      -> "let" "mut"? IDTYPEPAIR ( "=" expression )? ";"
block               -> "{" statement* "}"
expression          -> equality
assign              -> rule_logic_or "=" rule_assign | rule_logic_or
logic_or            -> logic_and ( "||" logic_and )*
logic_and           -> equality ( "and" equality )*
equality            -> comparison ( ( "!=" | "==" ) comparison )*
comparison          -> term ( ( ">" | ">=" | "<" | "<=" ) term )*
term                -> factor ( ( "-" | "+" ) factor )*
factor              -> unary ( ( "/" | "*" ) unary )*
unary               -> ( "!" | "-" | "/" ) unary | primary
call                -> primary ( "(" ( expression ( "," expression )* )? ")" )*
primary             -> "true" | "false" | "nil" | INTEGER | FLOAT | STRING | "(" expression ")" | IDENTIFIER
paramlist           -> (idtypepair ("," idtypepair)*)?
idtypepair          -> IDENTIFIER "'" DATATYPE
